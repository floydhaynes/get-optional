// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flow type definitions should not typecheck for incorrect usage 1`] = `
"Error --------------------------------------------------------------------------------- flow-should-not-pass/get.js:7:14

Cannot assign \`get(...)\` to \`c\` because undefined [1] is incompatible with \`C\` [2].

   flow-should-not-pass/get.js:7:14
    7| const c: C = get(input, 'a', 'b', 'c');
                    ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:21:5
   21| 		: void | $ElementType<$ReadOnly<$NonMaybeType<$ElementType<$ReadOnly<$NonMaybeType<$ElementType<$ReadOnly<$NonMaybeType<T>>, Key1>>>, Key2>>>, Key3>;
           ^^^^ [1]
   flow-should-not-pass/get.js:7:10
    7| const c: C = get(input, 'a', 'b', 'c');
                ^ [2]


Error -------------------------------------------------------------------------------- flow-should-not-pass/get.js:10:11

Cannot call \`get\` because:
 - Either no more than 2 arguments are expected by function type [1].
 - Or property \`c\` is missing in \`A\` [2].

   flow-should-not-pass/get.js:10:11
   10| const b = get(input, 'a', 'c');
                 ^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:4:2
        v--
    4| 	<T,
    5| 		Key1: $Keys<$ReadOnly<$NonMaybeType<T>>>,
    6| 	>
    7| 		(object: T, key1: Key1)
    8| 		: void | $ElementType<$ReadOnly<$NonMaybeType<T>>, Key1>;
       		-------------------------------------------------------^ [1]
   flow-interfaces.js:19:5
   19| 	a: A;

           ^ [2]


Error -------------------------------------------------------------------------------- flow-should-not-pass/get.js:15:28

Cannot call \`get\` because:
 - Either no more than 2 arguments are expected by function type [1].
 - Or array type [2] is not an object.

   flow-should-not-pass/get.js:15:28
   15| const num: void | number = get(pollResults, 'Helsinki', 0);
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:4:2
        v--
    4| 	<T,
    5| 		Key1: $Keys<$ReadOnly<$NonMaybeType<T>>>,
    6| 	>
    7| 		(object: T, key1: Key1)
    8| 		: void | $ElementType<$ReadOnly<$NonMaybeType<T>>, Key1>;
       		-------------------------------------------------------^ [1]
   flow-should-not-pass/get.js:14:43
   14| declare var pollResults: {[area: string]: number[]};
                                                 ^^^^^^^^ [2]


Error -------------------------------------------------------------------------------- flow-should-not-pass/get.js:20:57

Cannot call \`get\` because:
 - Either number [1] is not an object.
 - Or number [1] is not an object.
 - Or number [1] is not an object.
 - Or number [1] is not an object.
 - Or number [1] is not an object.

   flow-should-not-pass/get.js:20:57
   20| const toFixed: void | typeof Number.prototype.toFixed = get(e, 'toFixed');
                                                               ^^^^^^^^^^^^^^^^^

References:
   flow-interfaces.js:3:10
    3| type E = number;

                ^^^^^^ [1]


Error -------------------------------------------------------------------------------- flow-should-not-pass/get.js:25:24

Cannot assign \`get(...)\` to \`fromNull\` because undefined [1] is incompatible with null [2].

   flow-should-not-pass/get.js:25:24
   25| const fromNull: null = get(null, 'a');
                              ^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:8:5
    8| 		: void | $ElementType<$ReadOnly<$NonMaybeType<T>>, Key1>;
           ^^^^ [1]
   flow-should-not-pass/get.js:25:17
   25| const fromNull: null = get(null, 'a');
                       ^^^^ [2]


Error ---------------------------------------------------------------------- flow-should-not-pass/getWithDefault.js:7:14

Cannot assign \`getWithDefault(...)\` to \`c\` because property \`d\` is missing in \`B\` [1] but exists in \`C\` [2].

   flow-should-not-pass/getWithDefault.js:7:14
   7| const c: C = getWithDefault(bDefault, input, 'a', 'b', 'c');

                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   flow-should-not-pass/getWithDefault.js:9:23
   9| declare var bDefault: B;

                            ^ [1]
   flow-should-not-pass/getWithDefault.js:7:10
   7| const c: C = getWithDefault(bDefault, input, 'a', 'b', 'c');

               ^ [2]


Error --------------------------------------------------------------------- flow-should-not-pass/getWithDefault.js:11:11

Cannot call \`getWithDefault\` because:
 - Either no more than 3 arguments are expected by function type [1].
 - Or property \`c\` is missing in \`A\` [2].

   flow-should-not-pass/getWithDefault.js:11:11
   11| const b = getWithDefault(bDefault, input, 'a', 'c');

                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:44:2
        v-------------
   44| 	<DefaultValue,
   45| 		T,
   46| 		Key1: $Keys<$ReadOnly<$NonMaybeType<T>>>,
   47| 	>
   48| 		(defaultValue: DefaultValue, object: T, key1: Key1)
   49| 		: DefaultValue | $ElementType<$ReadOnly<$NonMaybeType<T>>, Key1>;
       		---------------------------------------------------------------^ [1]
   flow-interfaces.js:19:5
   19| 	a: A;

           ^ [2]



Found 7 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
"
`;
