// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Incorrect usage from Flow should not typecheck 1`] = `
"Error --------------------------------------------------------------- flow-should-not-pass/should-not-pass.flow.js:24:14

Cannot assign \`get(...)\` to \`c\` because undefined [1] is incompatible with \`C\` [2].

   flow-should-not-pass/should-not-pass.flow.js:24:14
   24| const c: C = get(input, 'a', 'b', 'c');
                    ^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:21:5
   21| 		: void | $ElementType<$NonMaybeType<$ElementType<$NonMaybeType<$ElementType<$NonMaybeType<T>, Key1>>, Key2>>, Key3>;
           ^^^^ [1]
   flow-should-not-pass/should-not-pass.flow.js:24:10
   24| const c: C = get(input, 'a', 'b', 'c');
                ^ [2]


Error --------------------------------------------------------------- flow-should-not-pass/should-not-pass.flow.js:27:11

Cannot call \`get\` because:
 - Either no more than 2 arguments are expected by function type [1].
 - Or property \`c\` is missing in \`A\` [2].

   flow-should-not-pass/should-not-pass.flow.js:27:11
   27| const b = get(input, 'a', 'c');
                 ^^^^^^^^^^^^^^^^^^^^

References:
   node_modules/safeget/index.js.flow:4:2
        v--
    4| 	<T,
    5| 		Key1: $Keys<$NonMaybeType<T>>,
    6| 	>
    7| 		(object: T, key1: Key1)
    8| 		: void | $ElementType<$NonMaybeType<T>, Key1>;
       		--------------------------------------------^ [1]
   flow-should-not-pass/should-not-pass.flow.js:20:5
   20| 	a: A;
           ^ [2]


Error --------------------------------------------------------------- flow-should-not-pass/should-not-pass.flow.js:31:57

Cannot call \`get\` because:
 - Either property \`toFixed\` is missing in number [1] in type argument \`Key1\`.
 - Or property \`toFixed\` is missing in number [1] in type argument \`Key1\`.
 - Or property \`toFixed\` is missing in number [1] in type argument \`Key1\`.
 - Or property \`toFixed\` is missing in number [1] in type argument \`Key1\`.
 - Or property \`toFixed\` is missing in number [1] in type argument \`Key1\`.

   flow-should-not-pass/should-not-pass.flow.js:31:57
   31| const toFixed: void | typeof Number.prototype.toFixed = get(e, 'toFixed');
                                                               ^^^^^^^^^^^^^^^^^

References:
   flow-should-not-pass/should-not-pass.flow.js:4:10
    4| type E = number;
                ^^^^^^ [1]



Found 3 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
"
`;
